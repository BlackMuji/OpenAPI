{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lab1\\\\Desktop\\\\open_api\\\\frontend\\\\src\\\\pages\\\\sidebar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../scss/sidebar.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = () => {\n  _s();\n  const [answer, setAnswer] = useState('');\n  const [selectedCrop, setSelectedCrop] = useState('');\n\n  // 입력 값이 변경될 때 호출되는 함수\n  const handleAnswerChange = e => {\n    setAnswer(e.target.value);\n  };\n  useEffect(() => {\n    switch (selectedCrop) {\n      case 'potato':\n        console.log('감자를 선택했습니다.');\n        // 감자에 대한 조건문 처리\n        break;\n      case 'tomato':\n        console.log('토마토를 선택했습니다.');\n        // 토마토에 대한 조건문 처리\n        break;\n      case 'strawberry':\n        console.log('딸기를 선택했습니다.');\n        // 딸기에 대한 조건문 처리\n        break;\n      case 'watermelon':\n        console.log('수박을 선택했습니다.');\n        // 수박에 대한 조건문 처리\n        break;\n      default:\n        console.log('선택된 작물이 없습니다.');\n    }\n  }, [selectedCrop]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"select-crop\",\n        name: \"crops\",\n        id: \"crops\",\n        value: selectedCrop,\n        onChange: e => setSelectedCrop(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"potato\",\n          children: \"\\uAC10\\uC790\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"tomato\",\n          children: \"\\uD1A0\\uB9C8\\uD1A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"strawberry\",\n          children: \"\\uB538\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"watermelon\",\n          children: \"\\uC218\\uBC15\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search__input\",\n        type: \"number\",\n        id: \"searchInput\",\n        placeholder: \"\\uD3C9\\uC218\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        value: answer,\n        onChange: handleAnswerChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Sidebar, \"zNa5dH/Ds6iW5Tl5s/IOCF+EXHU=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Sidebar","_s","answer","setAnswer","selectedCrop","setSelectedCrop","handleAnswerChange","e","target","value","console","log","className","children","name","id","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/lab1/Desktop/open_api/frontend/src/pages/sidebar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport '../scss/sidebar.scss'\r\n\r\nconst Sidebar = () => {\r\n    const [answer, setAnswer] = useState('');\r\n    const [selectedCrop, setSelectedCrop] = useState('');\r\n\r\n    // 입력 값이 변경될 때 호출되는 함수\r\n    const handleAnswerChange = (e) => {\r\n        setAnswer(e.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        switch (selectedCrop) {\r\n            case 'potato':\r\n                console.log('감자를 선택했습니다.');\r\n                // 감자에 대한 조건문 처리\r\n                break;\r\n            case 'tomato':\r\n                console.log('토마토를 선택했습니다.');\r\n                // 토마토에 대한 조건문 처리\r\n                break;\r\n            case 'strawberry':\r\n                console.log('딸기를 선택했습니다.');\r\n                // 딸기에 대한 조건문 처리\r\n                break;\r\n            case 'watermelon':\r\n                console.log('수박을 선택했습니다.');\r\n                // 수박에 대한 조건문 처리\r\n                break;\r\n            default:\r\n                console.log('선택된 작물이 없습니다.');\r\n        }\r\n    }, [selectedCrop]);\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className='input-wrap'>\r\n                <select\r\n                    className=\"select-crop\"\r\n                    name=\"crops\"\r\n                    id=\"crops\"\r\n                    value={selectedCrop}\r\n                    onChange={(e) => setSelectedCrop(e.target.value)}\r\n                >\r\n                    <option value=\"potato\">감자</option>\r\n                    <option value=\"tomato\">토마토</option>\r\n                    <option value=\"strawberry\">딸기</option>\r\n                    <option value=\"watermelon\">수박</option>\r\n                </select>\r\n                <input\r\n                    className=\"search__input\"\r\n                    type=\"number\"\r\n                    id=\"searchInput\"\r\n                    placeholder=\"평수를 입력해주세요.\"\r\n                    value={answer}\r\n                    onChange={handleAnswerChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA,MAAMU,kBAAkB,GAAIC,CAAC,IAAK;IAC9BJ,SAAS,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACZ,QAAQO,YAAY;MAChB,KAAK,QAAQ;QACTM,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;QAC1B;QACA;MACJ,KAAK,QAAQ;QACTD,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAC3B;QACA;MACJ,KAAK,YAAY;QACbD,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;QAC1B;QACA;MACJ,KAAK,YAAY;QACbD,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;QAC1B;QACA;MACJ;QACID,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IACpC;EACJ,CAAC,EAAE,CAACP,YAAY,CAAC,CAAC;EAElB,oBACIL,OAAA;IAAKa,SAAS,EAAC,SAAS;IAAAC,QAAA,eACpBd,OAAA;MAAKa,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvBd,OAAA;QACIa,SAAS,EAAC,aAAa;QACvBE,IAAI,EAAC,OAAO;QACZC,EAAE,EAAC,OAAO;QACVN,KAAK,EAAEL,YAAa;QACpBY,QAAQ,EAAGT,CAAC,IAAKF,eAAe,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAAAI,QAAA,gBAEjDd,OAAA;UAAQU,KAAK,EAAC,QAAQ;UAAAI,QAAA,EAAC;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClCrB,OAAA;UAAQU,KAAK,EAAC,QAAQ;UAAAI,QAAA,EAAC;QAAG;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnCrB,OAAA;UAAQU,KAAK,EAAC,YAAY;UAAAI,QAAA,EAAC;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtCrB,OAAA;UAAQU,KAAK,EAAC,YAAY;UAAAI,QAAA,EAAC;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACTrB,OAAA;QACIa,SAAS,EAAC,eAAe;QACzBS,IAAI,EAAC,QAAQ;QACbN,EAAE,EAAC,aAAa;QAChBO,WAAW,EAAC,0DAAa;QACzBb,KAAK,EAAEP,MAAO;QACdc,QAAQ,EAAEV;MAAmB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAnB,EAAA,CA1DKD,OAAO;AAAAuB,EAAA,GAAPvB,OAAO;AA4Db,eAAeA,OAAO;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}